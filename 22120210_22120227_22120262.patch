diff --git a/kernel/defs.h b/kernel/defs.h
index a3c962b..487f4f2 100644
--- a/kernel/defs.h
+++ b/kernel/defs.h
@@ -173,6 +173,7 @@ uint64          walkaddr(pagetable_t, uint64);
 int             copyout(pagetable_t, uint64, char *, uint64);
 int             copyin(pagetable_t, char *, uint64, uint64);
 int             copyinstr(pagetable_t, char *, uint64, uint64);
+void            vmprint(pagetable_t);
 
 // plic.c
 void            plicinit(void);
diff --git a/kernel/exec.c b/kernel/exec.c
index e18bbb6..158ed29 100644
--- a/kernel/exec.c
+++ b/kernel/exec.c
@@ -128,6 +128,11 @@ exec(char *path, char **argv)
   p->trapframe->sp = sp; // initial stack pointer
   proc_freepagetable(oldpagetable, oldsz);
 
+  if (p->pid == 1)
+  {
+    vmprint(p->pagetable);
+  }
+
   return argc; // this ends up in a0, the first argument to main(argc, argv)
 
  bad:
diff --git a/kernel/vm.c b/kernel/vm.c
index 5c31e87..b81a70e 100644
--- a/kernel/vm.c
+++ b/kernel/vm.c
@@ -449,3 +449,36 @@ copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)
     return -1;
   }
 }
+
+void
+vmprint_rec(pagetable_t pagetable, int level) {
+  if (pagetable == 0)
+    return;
+
+  for (int i = 0; i < 512; i++) {
+    pte_t pte = pagetable[i];
+    if (pte & PTE_V) { // Kiểm tra PTE hợp lệ
+      uint64 pa = PTE2PA(pte);
+      
+      // In dấu " .." theo level
+      for (int j = 0; j < level; j++) {
+        printf(" ..");
+      }
+
+      // In thông tin của PTE và địa chỉ vật lý
+      printf("%d: pte %p pa %p\n", i, (pagetable_t)pte, (pagetable_t)pa);
+
+      // Nếu PTE này trỏ đến một bảng trang con, tiếp tục gọi đệ quy
+      if ((pte & (PTE_R | PTE_W | PTE_X)) == 0) {
+        vmprint_rec((pagetable_t)pa, level + 1);
+      }
+    }
+  }
+}
+
+void
+vmprint(pagetable_t pagetable) {
+  // your code here
+  printf("page table %p\n", pagetable);
+  vmprint_rec(pagetable, 1);
+}
\ No newline at end of file
